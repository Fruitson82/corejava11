1.2. 기본 타입
    - 부호 있는 정수 타입
        - byte(1바이트): -128~127
        - short(2바이트): -32,768 ~ 32,767
        - int(4바이트): -2,147,483,648 ~ 2,147,483,647
        - long(8바이트): -9,223,372,036,854,775,808 ~ 9,223,372,036,854,775,807

        - Integer.MIN_VALUE는 가장 작은 정수 값
        - Integer.MAX_VALUE는 가장 큰 정수 값
        - Long, Short, Byte 클래스에도 MIN_VALUE, MAX_VALUE가 있음.

        - long 타입으로 충분하지 않을 때는 BigInteger를 사용

        - long 정수 리터럴은 접미어 L을 붙임.(ex. 40000000000L)
        - 16진수 리터럴은 접두어 0x를 붙임.(ex. 0xCAFEBABE)
        - 2진수 리터럴은 접두어 0b를 붙임.(ex. 0b1001)
        - 숫자 리터럴은 밑줄(_)을 붙일 수 있음.(ex. 1000000 -> 1_000_000)

    - 부동소수점 타입
        - float(4바이트): 약 ±3.40282347E+38F(유효자릿수 6~7)
        - double(8바이트): 약 ±1.79769313486231570E+308(유효자릿수 15)
        - 예전에는 메모리가 부족해서 4바이트 부동소수점 수를 사용하는 것이 일반적이었으나,
        소수점 자리 일곱 개로는 많은 것을 표현하지 못하기에 요즘에는 '배정밀도' 숫자가 기본
        
        - float 타입 숫자에는 접미어 F를 붙임.(ex. 3.14F)
        - 3.14처럼 부동소수점 리터럴에 접미어 F를 붙이지 않으면 double 타입이 됨.

        - 임의의 정밀도로 반올림 오류가 없는 정확한 숫자 계산이 필요할 때는 BigDecimal 클래스 사용

    - char 타입
        - 자바가 사용하는 UTF-16 문자 인코딩의 '코드 유닛'을 나타냄.
        - 접두어 \u를 사용해 코드 유닛 16진수로 표현

    - boolean 타입
        - false와 true
        - boolean 값과 정수인 0, 1 사이에는 아무런 관련 없음.


1.3. 변수

    - 상수
        - final 키워드로 할당
        - 보통 대문자로 선언하는 관례. 메서드 외부에 static 키워드로 선언 가능

1.4. 산술 연산
    - 피연산자 중 하나가 double 타입이면, 다른 하나를 double로 변환
    - 피연산자 중 하나가 float 타입이면, 다른 하나를 float로 변환
    - 피연산자 중 하나가 long 타입이면, 다른 하나를 long으로 변환
    - 이외에는 두 피연산자를 int로 변환

1.5. 문자열
    - 문자열 비교 시 리터럴 문자열을 앞쪽에 두는 것이 좋음.
    if ("World".equals(location)) ...
    이 검사는 location이 null일 때도 제대로 작동

    - 정수를 문자열로 변환할 때 Integer.toString을 호출